/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nvar _typeof = function(obj) {\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\nvar _s1 = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\nvar _router1 = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nvar prefetched = {\n};\nfunction prefetch(router, href, as, options) {\n    if ( false || !router) return;\n    if (!(0, _router).isLocalURL(href)) return;\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    router.prefetch(href, as, options).catch(function(err) {\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n    var curLocale = options && typeof options.locale !== 'undefined' ? options.locale : router && router.locale;\n    // Join on an invalid URI character\n    prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true;\n}\nfunction isModifiedEvent(event) {\n    var target = event.currentTarget.target;\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n    var nodeName = e.currentTarget.nodeName;\n    if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browserâ€™s default behavior\n        return;\n    }\n    e.preventDefault();\n    //  avoid scroll for urls with anchor refs\n    if (scroll == null && as.indexOf('#') >= 0) {\n        scroll = false;\n    }\n    // replace state instead of push if prop is present\n    router[replace ? 'replace' : 'push'](href, as, {\n        shallow: shallow,\n        locale: locale,\n        scroll: scroll\n    });\n}\nfunction Link(props) {\n    _s1();\n    if (true) {\n        var createPropError = function createPropError(args) {\n            return new Error(\"Failed prop type: The prop `\".concat(args.key, \"` expects a \").concat(args.expected, \" in `<Link>`, but got `\").concat(args.actual, \"` instead.\") + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0));\n        };\n        // TypeScript trick for type-guarding:\n        var requiredPropsGuard = {\n            href: true\n        };\n        var requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach(function(key) {\n            if (key === 'href') {\n                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n                    throw createPropError({\n                        key: key,\n                        expected: '`string` or `object`',\n                        actual: props[key] === null ? 'null' : _typeof(props[key])\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                var _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        var optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true\n        };\n        var optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach(function(key) {\n            var valType = _typeof(props[key]);\n            if (key === 'as') {\n                if (props[key] && valType !== 'string' && valType !== 'object') {\n                    throw createPropError({\n                        key: key,\n                        expected: '`string` or `object`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'locale') {\n                if (props[key] && valType !== 'string') {\n                    throw createPropError({\n                        key: key,\n                        expected: '`string`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {\n                if (props[key] != null && valType !== 'boolean') {\n                    throw createPropError({\n                        key: key,\n                        expected: '`boolean`',\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                var _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n        }\n    }\n    var p = props.prefetch !== false;\n    var router = (0, _router1).useRouter();\n    var ref2 = _react.default.useMemo(function() {\n        var ref = _slicedToArray((0, _router).resolveHref(router, props.href, true), 2), resolvedHref = ref[0], resolvedAs = ref[1];\n        return {\n            href: resolvedHref,\n            as: props.as ? (0, _router).resolveHref(router, props.as) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        props.href,\n        props.as\n    ]), href = ref2.href, as = ref2.as;\n    var children = props.children, replace = props.replace, shallow = props.shallow, scroll = props.scroll, locale = props.locale;\n    // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n    if (typeof children === 'string') {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    // This will return the first child, if multiple are provided it will throw an error\n    var child;\n    if (true) {\n        try {\n            child = _react.default.Children.only(children);\n        } catch (err) {\n            throw new Error(\"Multiple children were passed to <Link> with `href` of `\".concat(props.href, \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\") + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0));\n        }\n    } else {}\n    var childRef = child && typeof child === 'object' && child.ref;\n    var ref1 = _slicedToArray((0, _useIntersection).useIntersection({\n        rootMargin: '200px'\n    }), 2), setIntersectionRef = ref1[0], isVisible = ref1[1];\n    var setRef = _react.default.useCallback(function(el) {\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === 'function') childRef(el);\n            else if (typeof childRef === 'object') {\n                childRef.current = el;\n            }\n        }\n    }, [\n        childRef,\n        setIntersectionRef\n    ]);\n    _react.default.useEffect(function() {\n        var shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n        var curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n        var isPrefetched = prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')];\n        if (shouldPrefetch && !isPrefetched) {\n            prefetch(router, href, as, {\n                locale: curLocale\n            });\n        }\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        p,\n        router\n    ]);\n    var childProps = {\n        ref: setRef,\n        onClick: function(e) {\n            if (child.props && typeof child.props.onClick === 'function') {\n                child.props.onClick(e);\n            }\n            if (!e.defaultPrevented) {\n                linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n            }\n        }\n    };\n    childProps.onMouseEnter = function(e) {\n        if (!(0, _router).isLocalURL(href)) return;\n        if (child.props && typeof child.props.onMouseEnter === 'function') {\n            child.props.onMouseEnter(e);\n        }\n        prefetch(router, href, as, {\n            priority: true\n        });\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (props.passHref || child.type === 'a' && !('href' in child.props)) {\n        var curLocale1 = typeof locale !== 'undefined' ? locale : router && router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        var localeDomain = router && router.isLocaleDomain && (0, _router).getDomainLocale(as, curLocale1, router && router.locales, router && router.domainLocales);\n        childProps.href = localeDomain || (0, _router).addBasePath((0, _router).addLocale(as, curLocale1, router && router.defaultLocale));\n    }\n    return(/*#__PURE__*/ _react.default.cloneElement(child, childProps));\n}\n_s1(Link, \"ugPujB1zuGRzOKQKTT+IQY94kgY=\");\n_c = Link;\nvar _default = Link;\nexports[\"default\"] = _default; //# sourceMappingURL=link.js.map\nvar _c;\n$RefreshReg$(_c, \"Link\");\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nvar _s1 = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nvar hasIntersectionObserver = typeof IntersectionObserver !== 'undefined';\nfunction useIntersection(param) {\n    var rootMargin = param.rootMargin, disabled = param.disabled;\n    _s1();\n    var isDisabled = disabled || !hasIntersectionObserver;\n    var unobserve = (0, _react).useRef();\n    var ref = _slicedToArray((0, _react).useState(false), 2), visible = ref[0], setVisible = ref[1];\n    var setRef = (0, _react).useCallback(function(el) {\n        if (unobserve.current) {\n            unobserve.current();\n            unobserve.current = undefined;\n        }\n        if (isDisabled || visible) return;\n        if (el && el.tagName) {\n            unobserve.current = observe(el, function(isVisible) {\n                return isVisible && setVisible(isVisible);\n            }, {\n                rootMargin: rootMargin\n            });\n        }\n    }, [\n        isDisabled,\n        rootMargin,\n        visible\n    ]);\n    (0, _react).useEffect(function() {\n        if (!hasIntersectionObserver) {\n            if (!visible) {\n                var idleCallback = (0, _requestIdleCallback).requestIdleCallback(function() {\n                    return setVisible(true);\n                });\n                return function() {\n                    return (0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n                };\n            }\n        }\n    }, [\n        visible\n    ]);\n    return [\n        setRef,\n        visible\n    ];\n}\n_s1(useIntersection, \"Z6jj7qx+KE6gD9CpC9WlQTha45o=\");\nfunction observe(element, callback, options) {\n    var ref = createObserver(options), id = ref.id, observer = ref.observer, elements = ref.elements;\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n        }\n    };\n}\nvar observers = new Map();\nfunction createObserver(options) {\n    var id = options.rootMargin || '';\n    var instance = observers.get(id);\n    if (instance) {\n        return instance;\n    }\n    var elements = new Map();\n    var observer = new IntersectionObserver(function(entries) {\n        entries.forEach(function(entry) {\n            var callback = elements.get(entry.target);\n            var isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    observers.set(id, instance = {\n        id: id,\n        observer: observer,\n        elements: elements\n    });\n    return instance;\n} //# sourceMappingURL=use-intersection.js.map\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/pages/_app.js":
/*!**********************************************!*\
  !*** ./node_modules/next/dist/pages/_app.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\nvar _runtimeJs = _interopRequireDefault(__webpack_require__(/*! ./node_modules/next/node_modules/regenerator-runtime/runtime.js */ \"./node_modules/next/node_modules/regenerator-runtime/runtime.js\"));\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nvar _typeof = function(obj) {\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"AppInitialProps\", ({\n    enumerable: true,\n    get: function get() {\n        return _utils.AppInitialProps;\n    }\n}));\nObject.defineProperty(exports, \"NextWebVitalsMetric\", ({\n    enumerable: true,\n    get: function get() {\n        return _utils.NextWebVitalsMetric;\n    }\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault1(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _utils = __webpack_require__(/*! ../shared/lib/utils */ \"./node_modules/next/dist/shared/lib/utils.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _interopRequireDefault1(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _appGetInitialProps() {\n    _appGetInitialProps = /**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */ _asyncToGenerator(_runtimeJs.default.mark(function _callee(param) {\n        var Component, ctx, pageProps;\n        return _runtimeJs.default.wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    Component = param.Component, ctx = param.ctx;\n                    _ctx.next = 3;\n                    return (0, _utils).loadGetInitialProps(Component, ctx);\n                case 3:\n                    pageProps = _ctx.sent;\n                    return _ctx.abrupt(\"return\", {\n                        pageProps: pageProps\n                    });\n                case 5:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return _appGetInitialProps.apply(this, arguments);\n}\nfunction appGetInitialProps(_) {\n    return _appGetInitialProps.apply(this, arguments);\n}\nvar App = /*#__PURE__*/ function(_Component) {\n    _inherits(App, _Component);\n    function App() {\n        _classCallCheck(this, App);\n        return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n    }\n    _createClass(App, [\n        {\n            key: \"render\",\n            value: function render() {\n                var _props = this.props, Component = _props.Component, pageProps = _props.pageProps;\n                return(/*#__PURE__*/ _react.default.createElement(Component, Object.assign({\n                }, pageProps)));\n            }\n        }\n    ]);\n    return App;\n}(_react.default.Component);\nApp.origGetInitialProps = appGetInitialProps;\nApp.getInitialProps = appGetInitialProps;\nexports[\"default\"] = App; //# sourceMappingURL=_app.js.map\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/pages/_app.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MyApp; }\n/* harmony export */ });\n/* harmony import */ var _Users_janinezielman_Documents_Sites_Prismic_eyemove_node_modules_next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/regenerator-runtime/runtime.js */ \"./node_modules/next/node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_janinezielman_Documents_Sites_Prismic_eyemove_node_modules_next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_janinezielman_Documents_Sites_Prismic_eyemove_node_modules_next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _prismicio_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @prismicio/client */ \"./node_modules/@prismicio/client/esm/@prismicio/client.mjs\");\n/* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/app */ \"./node_modules/next/app.js\");\n/* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_app__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _prismic_configuration__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../prismic-configuration */ \"./prismic-configuration.js\");\n/* harmony import */ var _styles_globals_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/globals.scss */ \"./styles/globals.scss\");\n/* harmony import */ var _styles_globals_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\n\n\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {\n        };\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nvar _typeof = function(obj) {\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\nvar MyApp = /*#__PURE__*/ function(NextApp) {\n    \"use strict\";\n    _inherits(MyApp, NextApp);\n    function MyApp() {\n        _classCallCheck(this, MyApp);\n        return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n    }\n    _createClass(MyApp, [\n        {\n            key: \"render\",\n            value: function render() {\n                var _props = this.props, Component = _props.Component, pageProps = _props.pageProps, props = _props.props;\n                return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Component, _objectSpread({\n                }, pageProps, {\n                    menu: props.menu,\n                    footer: props.footer,\n                    __source: {\n                        fileName: \"/Users/janinezielman/Documents/Sites/Prismic/eyemove/pages/_app.js\",\n                        lineNumber: 23,\n                        columnNumber: 7\n                    },\n                    __self: this\n                })));\n            }\n        }\n    ], [\n        {\n            key: \"getInitialProps\",\n            value: function getInitialProps(appCtx) {\n                return _asyncToGenerator(_Users_janinezielman_Documents_Sites_Prismic_eyemove_node_modules_next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n                    var menu, footer;\n                    return _Users_janinezielman_Documents_Sites_Prismic_eyemove_node_modules_next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                        while(1)switch(_ctx.prev = _ctx.next){\n                            case 0:\n                                _ctx.next = 2;\n                                return (0,_prismic_configuration__WEBPACK_IMPORTED_MODULE_5__.Client)().getSingle(\"menu\");\n                            case 2:\n                                _ctx.t0 = _ctx.sent;\n                                if (_ctx.t0) {\n                                    _ctx.next = 5;\n                                    break;\n                                }\n                                _ctx.t0 = {\n                                };\n                            case 5:\n                                menu = _ctx.t0;\n                                _ctx.next = 8;\n                                return (0,_prismic_configuration__WEBPACK_IMPORTED_MODULE_5__.Client)().getSingle(\"footer\");\n                            case 8:\n                                _ctx.t1 = _ctx.sent;\n                                if (_ctx.t1) {\n                                    _ctx.next = 11;\n                                    break;\n                                }\n                                _ctx.t1 = {\n                                };\n                            case 11:\n                                footer = _ctx.t1;\n                                return _ctx.abrupt(\"return\", {\n                                    props: {\n                                        menu: menu,\n                                        footer: footer\n                                    }\n                                });\n                            case 13:\n                            case \"end\":\n                                return _ctx.stop();\n                        }\n                    }, _callee);\n                }))();\n            }\n        }\n    ]);\n    return MyApp;\n}((next_app__WEBPACK_IMPORTED_MODULE_4___default()));\n\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUI7QUFDYztBQUNUO0FBQ21CO0FBRWxCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVWSSxLQUFLLGlCQUFYLFFBQVE7O2NBQUZBLEtBQUs7YUFBTEEsS0FBSzs4QkFBTEEsS0FBSztnRUFBTEEsS0FBSzs7aUJBQUxBLEtBQUs7O1lBWXhCQyxHQUFNLEVBQU5BLENBQU07bUJBQU5BLFFBQVEsQ0FBUkEsTUFBTSxHQUFHLENBQUM7Z0JBQ1IsR0FBSyxDQUFtQyxNQUFVLEdBQVYsSUFBSSxDQUFDQyxLQUFLLEVBQTFDQyxTQUFTLEdBQXVCLE1BQVUsQ0FBMUNBLFNBQVMsRUFBRUMsU0FBUyxHQUFZLE1BQVUsQ0FBL0JBLFNBQVMsRUFBRUYsS0FBSyxHQUFLLE1BQVUsQ0FBcEJBLEtBQUs7Z0JBQ25DLE1BQU0sc0VBQ0hDLFNBQVM7bUJBQUtDLFNBQVM7b0JBQUVDLElBQUksRUFBRUgsS0FBSyxDQUFDRyxJQUFJO29CQUFFQyxNQUFNLEVBQUVKLEtBQUssQ0FBQ0ksTUFBTTs7Ozs7Ozs7WUFFcEUsQ0FBQzs7OztZQWhCWUMsR0FBZSxFQUFmQSxDQUFlO21CQUE1QixRQUFRLENBQUtBLGVBQWUsQ0FBQ0MsTUFBTTt3TUFBbkMsUUFBUSxXQUE2QixDQUFDO3dCQUM5QkgsSUFBSSxFQUNKQyxNQUFNOzs7Ozt1Q0FEUVAsOERBQU0sR0FBR1UsU0FBUyxDQUFDLENBQU07Ozs7Ozs7MENBQU0sQ0FBQztnQ0FBQSxDQUFDOztnQ0FBL0NKLElBQUk7O3VDQUNZTiw4REFBTSxHQUFHVSxTQUFTLENBQUMsQ0FBUTs7Ozs7OzswQ0FBTSxDQUFDO2dDQUFBLENBQUM7O2dDQUFuREgsTUFBTTs2REFDTCxDQUFDO29DQUNOSixLQUFLLEVBQUUsQ0FBQzt3Q0FDTkcsSUFBSSxFQUFFQSxJQUFJO3dDQUNWQyxNQUFNLEVBQUVBLE1BQU07b0NBQ2hCLENBQUM7Z0NBQ0gsQ0FBQzs7Ozs7O2dCQUNILENBQUM7Ozs7V0FWa0JOLEtBQUs7RUFBU0YsaURBQU87QUFBaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBQcmlzbWljIGZyb20gJ0BwcmlzbWljaW8vY2xpZW50J1xuaW1wb3J0IE5leHRBcHAgZnJvbSAnbmV4dC9hcHAnXG5pbXBvcnQgeyBDbGllbnQgfSBmcm9tIFwiLi4vcHJpc21pYy1jb25maWd1cmF0aW9uXCI7XG5cbmltcG9ydCBcIi4uL3N0eWxlcy9nbG9iYWxzLnNjc3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlBcHAgZXh0ZW5kcyBOZXh0QXBwIHtcbiAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyhhcHBDdHgpIHtcbiAgICBjb25zdCBtZW51ID0gKGF3YWl0IENsaWVudCgpLmdldFNpbmdsZShcIm1lbnVcIikpIHx8IHt9O1xuICAgIGNvbnN0IGZvb3RlciA9IChhd2FpdCBDbGllbnQoKS5nZXRTaW5nbGUoXCJmb290ZXJcIikpIHx8IHt9O1xuICAgIHJldHVybiB7XG4gICAgICBwcm9wczoge1xuICAgICAgICBtZW51OiBtZW51LFxuICAgICAgICBmb290ZXI6IGZvb3RlclxuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgQ29tcG9uZW50LCBwYWdlUHJvcHMsIHByb3BzIH0gPSB0aGlzLnByb3BzXG4gICAgcmV0dXJuIChcbiAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gbWVudT17cHJvcHMubWVudX0gZm9vdGVyPXtwcm9wcy5mb290ZXJ9IC8+XG4gICAgKVxuICB9XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJQcmlzbWljIiwiTmV4dEFwcCIsIkNsaWVudCIsIk15QXBwIiwicmVuZGVyIiwicHJvcHMiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJtZW51IiwiZm9vdGVyIiwiZ2V0SW5pdGlhbFByb3BzIiwiYXBwQ3R4IiwiZ2V0U2luZ2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./prismic-configuration.js":
/*!**********************************!*\
  !*** ./prismic-configuration.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"repoName\": function() { return /* binding */ repoName; },\n/* harmony export */   \"apiEndpoint\": function() { return /* binding */ apiEndpoint; },\n/* harmony export */   \"accessToken\": function() { return /* binding */ accessToken; },\n/* harmony export */   \"linkResolver\": function() { return /* binding */ linkResolver; },\n/* harmony export */   \"hrefResolver\": function() { return /* binding */ hrefResolver; },\n/* harmony export */   \"customLink\": function() { return /* binding */ customLink; },\n/* harmony export */   \"Router\": function() { return /* binding */ Router; },\n/* harmony export */   \"Client\": function() { return /* binding */ Client; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _prismicio_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prismicio/client */ \"./node_modules/@prismicio/client/esm/@prismicio/client.mjs\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nvar _this = undefined;\n// -- Prismic Repo Name\nvar repoName = 'eyemove';\n// -- Prismic API endpoint\n// Determines which repository to query and fetch data from\n// Configure your site's access point here\nvar apiEndpoint = \"https://\".concat(repoName, \".prismic.io/api/v2\");\n// -- Access Token if the repository is not public\n// Generate a token in your dashboard and configure it here if your repository is private\nvar accessToken = 'MC5ZYW8wV0JNQUFDQUF6d3ls.77-9Tmnvv70GDO-_ve-_vX4P77-977-977-9TO-_vWfvv71V77-9R--_vT3vv70W77-977-9LHFPBe-_ve-_vQ';\n// -- Link resolution rules\n// Manages the url links to internal Prismic documents\nvar linkResolver = function(doc) {\n    if (doc.type === \"page\") {\n        return \"/\".concat(doc.uid);\n    }\n    if (doc.type === 'info') {\n        return \"/praktische-informatie\";\n    }\n    return \"/\";\n};\n// Additional helper function for Next/Link components\nvar hrefResolver = function(doc) {\n    if (doc.type === 'info') {\n        return '/praktische-informatie';\n    }\n    return '/';\n};\nvar customLink = function(type, element, content, children, index) {\n    /*#__PURE__*/ return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n        href: linkResolver(element.data),\n        as: linkResolver(element.data),\n        __source: {\n            fileName: \"/Users/janinezielman/Documents/Sites/Prismic/eyemove/prismic-configuration.js\",\n            lineNumber: 38,\n            columnNumber: 3\n        },\n        __self: _this,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n            __source: {\n                fileName: \"/Users/janinezielman/Documents/Sites/Prismic/eyemove/prismic-configuration.js\",\n                lineNumber: 43,\n                columnNumber: 5\n            },\n            __self: _this,\n            children: content\n        })\n    }, index);\n};\nvar Router = {\n    routes: [\n        {\n            \"type\": \"page\",\n            \"path\": \"/:uid\"\n        }\n    ],\n    href: function(type) {\n        var route = Router.routes.find(function(r) {\n            return r.type === type;\n        });\n        return route && route.href;\n    }\n};\nvar Client = function(param, param1) {\n    var req = param === void 0 ? null : param, options = param1 === void 0 ? {\n    } : param1;\n    return _prismicio_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].client(apiEndpoint, Object.assign({\n        routes: Router.routes\n    }, options));\n};\n_c = Client;\nvar _c;\n$RefreshReg$(_c, \"Client\");\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wcmlzbWljLWNvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ1g7O0FBRTVCLEVBQXVCO0FBQ2hCLEdBQUssQ0FBQ0UsUUFBUSxHQUFHLENBQVM7QUFFakMsRUFBMEI7QUFDMUIsRUFBMkQ7QUFDM0QsRUFBMEM7QUFDbkMsR0FBSyxDQUFDQyxXQUFXLEdBQUksQ0FBUSxVQUFXLE1BQWtCLENBQTNCRCxRQUFRLEVBQUMsQ0FBa0I7QUFFakUsRUFBa0Q7QUFDbEQsRUFBeUY7QUFDbEYsR0FBSyxDQUFDRSxXQUFXLEdBQUcsQ0FBaUg7QUFHNUksRUFBMkI7QUFDM0IsRUFBc0Q7QUFDL0MsR0FBSyxDQUFDQyxZQUFZLEdBQUcsUUFBUSxDQUFQQyxHQUFHLEVBQUssQ0FBQztJQUNwQyxFQUFFLEVBQUVBLEdBQUcsQ0FBQ0MsSUFBSSxLQUFLLENBQU0sT0FBRSxDQUFDO1FBQ3hCLE1BQU0sQ0FBRSxDQUFDLEdBQVUsT0FBUkQsR0FBRyxDQUFDRSxHQUFHO0lBQ3BCLENBQUM7SUFDRCxFQUFFLEVBQUVGLEdBQUcsQ0FBQ0MsSUFBSSxLQUFLLENBQU0sT0FBRSxDQUFDO1FBQ3hCLE1BQU0sQ0FBRSxDQUFzQjtJQUNoQyxDQUFDO0lBQ0QsTUFBTSxDQUFDLENBQUc7QUFDWixDQUFDO0FBRUQsRUFBc0Q7QUFDL0MsR0FBSyxDQUFDRSxZQUFZLEdBQUcsUUFBUSxDQUFQSCxHQUFHLEVBQUssQ0FBQztJQUNwQyxFQUFFLEVBQUVBLEdBQUcsQ0FBQ0MsSUFBSSxLQUFLLENBQU0sT0FBRSxDQUFDO1FBQ3hCLE1BQU0sQ0FBQyxDQUF3QjtJQUNqQyxDQUFDO0lBQ0QsTUFBTSxDQUFDLENBQUc7QUFDWixDQUFDO0FBRU0sR0FBSyxDQUFDRyxVQUFVLEdBQUcsUUFBUSxDQUFQSCxJQUFJLEVBQUVJLE9BQU8sRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLEtBQUs7a0JBQ2hFLE1BQ0YsQ0FBQyx1REFERWIsa0RBQUk7UUFFSGMsSUFBSSxFQUFFVixZQUFZLENBQUNNLE9BQU8sQ0FBQ0ssSUFBSTtRQUMvQkMsRUFBRSxFQUFFWixZQUFZLENBQUNNLE9BQU8sQ0FBQ0ssSUFBSTs7Ozs7Ozt1RkFFNUJFLENBQUM7Ozs7Ozs7c0JBQUVOLE9BQU87O09BSk5FLEtBQUs7O0FBUVAsR0FBSyxDQUFDSyxNQUFNLEdBQUcsQ0FBQztJQUNyQkMsTUFBTSxFQUFFLENBQUM7UUFBQSxDQUFDO1lBQUEsQ0FBTSxPQUFDLENBQU07WUFBQyxDQUFNLE9BQUMsQ0FBTztRQUFBLENBQUM7SUFBQSxDQUFDO0lBQ3hDTCxJQUFJLEVBQUUsUUFBUSxDQUFQUixJQUFJLEVBQUssQ0FBQztRQUNmLEdBQUssQ0FBQ2MsS0FBSyxHQUFHRixNQUFNLENBQUNDLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDQyxRQUFRLENBQVJBLENBQUM7WUFBSUEsTUFBTSxDQUFOQSxDQUFDLENBQUNoQixJQUFJLEtBQUtBLElBQUk7O1FBQ3JELE1BQU0sQ0FBQ2MsS0FBSyxJQUFJQSxLQUFLLENBQUNOLElBQUk7SUFDNUIsQ0FBQztBQUNILENBQUM7QUFFTSxHQUFLLENBQUNTLE1BQU0sR0FBRyxRQUFRO1FBQVBDLEdBQUcsc0JBQUcsSUFBSSxVQUFFQyxPQUFPLHVCQUFHLENBQUM7SUFBQSxDQUFDO0lBQUssTUFDaEQsQ0FBRjFCLGdFQUFjLENBQUNHLFdBQVcsRUFBRXlCLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7UUFBQ1QsTUFBTSxFQUFFRCxNQUFNLENBQUNDLE1BQU07SUFBQyxDQUFDLEVBQUVNLE9BQU87O0tBRGpFRixNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3ByaXNtaWMtY29uZmlndXJhdGlvbi5qcz84MTRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcmlzbWljIGZyb20gXCJAcHJpc21pY2lvL2NsaWVudFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuXG4vLyAtLSBQcmlzbWljIFJlcG8gTmFtZVxuZXhwb3J0IGNvbnN0IHJlcG9OYW1lID0gJ2V5ZW1vdmUnXG5cbi8vIC0tIFByaXNtaWMgQVBJIGVuZHBvaW50XG4vLyBEZXRlcm1pbmVzIHdoaWNoIHJlcG9zaXRvcnkgdG8gcXVlcnkgYW5kIGZldGNoIGRhdGEgZnJvbVxuLy8gQ29uZmlndXJlIHlvdXIgc2l0ZSdzIGFjY2VzcyBwb2ludCBoZXJlXG5leHBvcnQgY29uc3QgYXBpRW5kcG9pbnQgPSBgaHR0cHM6Ly8ke3JlcG9OYW1lfS5wcmlzbWljLmlvL2FwaS92MmBcblxuLy8gLS0gQWNjZXNzIFRva2VuIGlmIHRoZSByZXBvc2l0b3J5IGlzIG5vdCBwdWJsaWNcbi8vIEdlbmVyYXRlIGEgdG9rZW4gaW4geW91ciBkYXNoYm9hcmQgYW5kIGNvbmZpZ3VyZSBpdCBoZXJlIGlmIHlvdXIgcmVwb3NpdG9yeSBpcyBwcml2YXRlXG5leHBvcnQgY29uc3QgYWNjZXNzVG9rZW4gPSAnTUM1WllXOHdWMEpOUVVGRFFVRjZkM2xzLjc3LTlUbW52djcwR0RPLV92ZS1fdlg0UDc3LTk3Ny05NzctOVRPLV92V2Z2djcxVjc3LTlSLS1fdlQzdnY3MFc3Ny05NzctOUxIRlBCZS1fdmUtX3ZRJ1xuXG5cbi8vIC0tIExpbmsgcmVzb2x1dGlvbiBydWxlc1xuLy8gTWFuYWdlcyB0aGUgdXJsIGxpbmtzIHRvIGludGVybmFsIFByaXNtaWMgZG9jdW1lbnRzXG5leHBvcnQgY29uc3QgbGlua1Jlc29sdmVyID0gKGRvYykgPT4ge1xuICBpZiAoZG9jLnR5cGUgPT09IFwicGFnZVwiKSB7XG4gICAgcmV0dXJuIGAvJHtkb2MudWlkfWA7XG4gIH1cbiAgaWYgKGRvYy50eXBlID09PSAnaW5mbycpIHtcbiAgICByZXR1cm4gYC9wcmFrdGlzY2hlLWluZm9ybWF0aWVgXG4gIH1cbiAgcmV0dXJuIFwiL1wiO1xufTtcblxuLy8gQWRkaXRpb25hbCBoZWxwZXIgZnVuY3Rpb24gZm9yIE5leHQvTGluayBjb21wb25lbnRzXG5leHBvcnQgY29uc3QgaHJlZlJlc29sdmVyID0gKGRvYykgPT4ge1xuICBpZiAoZG9jLnR5cGUgPT09ICdpbmZvJykge1xuICAgIHJldHVybiAnL3ByYWt0aXNjaGUtaW5mb3JtYXRpZSdcbiAgfVxuICByZXR1cm4gJy8nXG59XG5cbmV4cG9ydCBjb25zdCBjdXN0b21MaW5rID0gKHR5cGUsIGVsZW1lbnQsIGNvbnRlbnQsIGNoaWxkcmVuLCBpbmRleCkgPT4gKFxuICA8TGlua1xuICAgIGtleT17aW5kZXh9XG4gICAgaHJlZj17bGlua1Jlc29sdmVyKGVsZW1lbnQuZGF0YSl9XG4gICAgYXM9e2xpbmtSZXNvbHZlcihlbGVtZW50LmRhdGEpfVxuICA+XG4gICAgPGE+e2NvbnRlbnR9PC9hPlxuICA8L0xpbms+XG4pO1xuXG5leHBvcnQgY29uc3QgUm91dGVyID0ge1xuICByb3V0ZXM6IFt7XCJ0eXBlXCI6XCJwYWdlXCIsXCJwYXRoXCI6XCIvOnVpZFwifV0sXG4gIGhyZWY6ICh0eXBlKSA9PiB7XG4gICAgY29uc3Qgcm91dGUgPSBSb3V0ZXIucm91dGVzLmZpbmQociA9PiByLnR5cGUgPT09IHR5cGUpO1xuICAgIHJldHVybiByb3V0ZSAmJiByb3V0ZS5ocmVmO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgQ2xpZW50ID0gKHJlcSA9IG51bGwsIG9wdGlvbnMgPSB7fSkgPT4gKFxuICBQcmlzbWljLmNsaWVudChhcGlFbmRwb2ludCwgT2JqZWN0LmFzc2lnbih7IHJvdXRlczogUm91dGVyLnJvdXRlcyB9LCBvcHRpb25zKSlcbik7XG4iXSwibmFtZXMiOlsiUHJpc21pYyIsIkxpbmsiLCJyZXBvTmFtZSIsImFwaUVuZHBvaW50IiwiYWNjZXNzVG9rZW4iLCJsaW5rUmVzb2x2ZXIiLCJkb2MiLCJ0eXBlIiwidWlkIiwiaHJlZlJlc29sdmVyIiwiY3VzdG9tTGluayIsImVsZW1lbnQiLCJjb250ZW50IiwiY2hpbGRyZW4iLCJpbmRleCIsImhyZWYiLCJkYXRhIiwiYXMiLCJhIiwiUm91dGVyIiwicm91dGVzIiwicm91dGUiLCJmaW5kIiwiciIsIkNsaWVudCIsInJlcSIsIm9wdGlvbnMiLCJjbGllbnQiLCJPYmplY3QiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./prismic-configuration.js\n");

/***/ }),

/***/ "./node_modules/cross-fetch/dist/browser-ponyfill.js":
/*!***********************************************************!*\
  !*** ./node_modules/cross-fetch/dist/browser-ponyfill.js ***!
  \***********************************************************/
/***/ (function(module, exports) {

eval("var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports[\"default\"] = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cross-fetch/dist/browser-ponyfill.js\n");

/***/ }),

/***/ "./node_modules/next/app.js":
/*!**********************************!*\
  !*** ./node_modules/next/app.js ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./dist/pages/_app */ \"./node_modules/next/dist/pages/_app.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9hcHAuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsdUdBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2FwcC5qcz82NmVjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L3BhZ2VzL19hcHAnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/app.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./styles/globals.scss":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./styles/globals.scss ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: \\\"Avenir Roman\\\";\\n  max-width: 100vw;\\n  overflow-x: hidden;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\\nh1 {\\n  font-size: 36px;\\n  margin: 0;\\n}\\n\\nh3 {\\n  font-size: 24px;\\n}\\n\\np {\\n  font-size: 18px;\\n  line-height: 1.4;\\n}\\n\\na {\\n  color: inherit;\\n}\\na:hover {\\n  color: #095463;\\n}\\n\\nimg {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n.container {\\n  max-width: 1200px;\\n  margin: auto;\\n  padding: 24px 0px;\\n}\\n\\n.page {\\n  margin-top: 100px;\\n}\\n\\n.home .two-columns:nth-child(odd) {\\n  background-color: #B8F2F7;\\n}\\n.home .container {\\n  padding: 90px 0;\\n}\\n\\nheader {\\n  position: fixed;\\n  z-index: 999;\\n  top: 0;\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 8px 20px;\\n  align-items: center;\\n  background-color: #B8F2F7;\\n}\\nheader nav ul {\\n  justify-content: flex-end;\\n}\\nheader .logo img {\\n  width: 55px;\\n  height: auto;\\n}\\n\\nnav ul {\\n  list-style: none;\\n  display: flex;\\n}\\nnav ul li {\\n  margin: 0 20px;\\n  font-size: 20px;\\n}\\nnav ul li a {\\n  text-decoration: none;\\n}\\n\\nfooter {\\n  background-color: #B8F2F7;\\n  padding: 14px;\\n}\\nfooter .columns {\\n  display: flex;\\n}\\nfooter .columns .column {\\n  padding: 20px;\\n  width: 33%;\\n}\\nfooter nav ul {\\n  justify-content: center;\\n}\\n\\n.hero {\\n  width: 100vw;\\n  height: 100vh;\\n  display: flex;\\n}\\n\\n.hero-img {\\n  width: 100vw;\\n  height: 100vh;\\n  opacity: 0.65;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: -1;\\n}\\n\\n.hero-txt {\\n  width: 950px;\\n  margin: auto auto;\\n  padding: 20px;\\n  border: 1px solid black;\\n  line-height: 1.5;\\n  text-align: center;\\n  opacity: 1;\\n}\\n\\n.two-columns .container {\\n  display: flex;\\n}\\n.two-columns .column {\\n  width: 50%;\\n}\\n.two-columns .column ul {\\n  font-size: 24px;\\n}\\n\\n.text-block {\\n  max-width: 900px;\\n  margin: auto;\\n}\\n\\ntable {\\n  width: 100%;\\n  border-spacing: 0px;\\n  text-align: center;\\n}\\ntable tr td {\\n  padding: 10px;\\n  border-bottom: 1px solid black;\\n  border-right: 1px solid black;\\n}\\ntable tr td:nth-child(1) {\\n  border-left: 1px solid black;\\n}\\ntable tr:nth-child(1) {\\n  background-color: #B8F2F7;\\n}\\ntable tr:nth-child(1) td {\\n  padding: 10px;\\n  border-top: 1px solid black;\\n}\\n\\n.mapouter {\\n  position: relative;\\n  text-align: right;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.gmap_canvas {\\n  overflow: hidden;\\n  background: none !important;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.contact {\\n  padding: 48px 20px;\\n  text-align: center;\\n}\\n.contact .columns {\\n  margin-top: 48px;\\n  display: flex;\\n}\\n.contact .columns .column {\\n  width: 50%;\\n  padding: 10px;\\n  text-align: left;\\n}\\n.contact .columns .column form {\\n  width: 95%;\\n  display: block;\\n  margin: auto;\\n}\\n.contact .columns .column form label, .contact .columns .column form input, .contact .columns .column form textarea {\\n  width: 100%;\\n}\\n.contact .columns .column form input {\\n  margin: 10px 0 20px 0;\\n  padding: 14px;\\n}\\n.contact .columns .column form input[type=submit] {\\n  background-color: #095463;\\n  color: #fff;\\n  font-size: 18px;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n@media screen and (max-width: 950px) {\\n  h1 {\\n    font-size: 28px;\\n  }\\n\\n  h3 {\\n    font-size: 20px;\\n  }\\n\\n  p {\\n    font-size: 16px;\\n    line-height: 1.4;\\n  }\\n\\n  .page {\\n    margin-top: 80px;\\n    padding: 10px;\\n  }\\n\\n  .hero-txt {\\n    width: 95%;\\n    margin: auto;\\n  }\\n  .hero-txt h1 {\\n    font-size: 22px;\\n  }\\n\\n  div.text-block {\\n    padding: 0 10px;\\n  }\\n\\n  .home .container {\\n    padding: 45px 0px;\\n  }\\n\\n  nav {\\n    width: 100%;\\n  }\\n  nav ul {\\n    margin: 0;\\n    padding: 0;\\n  }\\n  nav ul li {\\n    margin: 0 10px;\\n  }\\n  nav a {\\n    font-size: 16px;\\n  }\\n\\n  header {\\n    display: flex;\\n    padding: 10px 10px;\\n  }\\n  header .logo img {\\n    width: 50px;\\n  }\\n\\n  .container {\\n    display: block;\\n    margin: auto;\\n    width: 100%;\\n  }\\n  .container .column {\\n    width: 100%;\\n  }\\n\\n  .two-columns .container {\\n    display: block;\\n    margin: auto;\\n    width: 90%;\\n  }\\n  .two-columns .container .column {\\n    width: 100%;\\n  }\\n\\n  table {\\n    font-size: 0.9em;\\n  }\\n\\n  .contact .columns, footer .columns {\\n    display: block;\\n  }\\n  .contact .columns .column, footer .columns .column {\\n    width: 100%;\\n    margin-bottom: 14px;\\n    padding: 5px 10px;\\n  }\\n\\n  .contact {\\n    padding: 0;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://globals.scss\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,UAAA;EACA,SAAA;EACA,2BAAA;EACA,gBAAA;EACA,kBAAA;AACF;;AAEA;EACE,sBAAA;AACF;;AAEA;EACE,eAAA;EACA,SAAA;AACF;;AAEA;EACE,eAAA;AACF;;AAEA;EACE,eAAA;EACA,gBAAA;AACF;;AAEA;EACE,cAAA;AACF;AAAE;EACE,cAAA;AAEJ;;AAEA;EACE,eAAA;EACA,YAAA;AACF;;AAEA;EACE,iBAAA;EACA,YAAA;EACA,iBAAA;AACF;;AAEA;EACE,iBAAA;AACF;;AAGE;EACE,yBAAA;AAAJ;AAEE;EACE,eAAA;AAAJ;;AAIA;EACE,eAAA;EACA,YAAA;EACA,MAAA;EACA,WAAA;EACA,aAAA;EACA,8BAAA;EACA,iBAAA;EACA,mBAAA;EACA,yBAAA;AADF;AAGI;EACE,yBAAA;AADN;AAKI;EACE,WAAA;EACA,YAAA;AAHN;;AASE;EACE,gBAAA;EACA,aAAA;AANJ;AAOI;EACE,cAAA;EACA,eAAA;AALN;AAMM;EACE,qBAAA;AAJR;;AAUA;EACE,yBAAA;EACA,aAAA;AAPF;AAQE;EACE,aAAA;AANJ;AAOI;EACE,aAAA;EACA,UAAA;AALN;AASI;EACE,uBAAA;AAPN;;AAYA;EACE,YAAA;EACA,aAAA;EACA,aAAA;AATF;;AAYA;EACE,YAAA;EACA,aAAA;EACA,aAAA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,WAAA;AATF;;AAYA;EACE,YAAA;EACA,iBAAA;EACA,aAAA;EACA,uBAAA;EACA,gBAAA;EACA,kBAAA;EACA,UAAA;AATF;;AAcE;EACE,aAAA;AAXJ;AAaE;EACE,UAAA;AAXJ;AAYI;EACE,eAAA;AAVN;;AAeA;EACE,gBAAA;EACA,YAAA;AAZF;;AAeA;EACE,WAAA;EACA,mBAAA;EACA,kBAAA;AAZF;AAcI;EAIE,aAAA;EACA,8BAAA;EACA,6BAAA;AAfN;AAUM;EACE,4BAAA;AARR;AAcI;EACE,yBAAA;AAZN;AAaM;EACE,aAAA;EACA,2BAAA;AAXR;;AAiBA;EAAU,kBAAA;EAAkB,iBAAA;EAAiB,YAAA;EAAY,WAAA;AAVzD;;AAWA;EAAc,gBAAA;EAAgB,2BAAA;EAA0B,YAAA;EAAY,WAAA;AAJpE;;AAMA;EACE,kBAAA;EACA,kBAAA;AAHF;AAIE;EACE,gBAAA;EACA,aAAA;AAFJ;AAGI;EACE,UAAA;EACA,aAAA;EACA,gBAAA;AADN;AAEM;EACE,UAAA;EACA,cAAA;EACA,YAAA;AAAR;AACQ;EACE,WAAA;AACV;AACQ;EACE,qBAAA;EACA,aAAA;AACV;AAAU;EACE,yBAAA;EACA,WAAA;EACA,eAAA;EACA,YAAA;EACA,eAAA;AAEZ;;AAMA;EACE;IACE,eAAA;EAHF;;EAMA;IACE,eAAA;EAHF;;EAMA;IACE,eAAA;IACA,gBAAA;EAHF;;EAKA;IACE,gBAAA;IACA,aAAA;EAFF;;EAIA;IACE,UAAA;IACA,YAAA;EADF;EAEE;IACE,eAAA;EAAJ;;EAGA;IACE,eAAA;EAAF;;EAEA;IACE,iBAAA;EACF;;EACA;IACE,WAAA;EAEF;EADE;IACE,SAAA;IACA,UAAA;EAGJ;EAFI;IACE,cAAA;EAIN;EADE;IACE,eAAA;EAGJ;;EAAA;IACE,aAAA;IACA,kBAAA;EAGF;EADI;IACE,WAAA;EAGN;;EACA;IACE,cAAA;IACA,YAAA;IACA,WAAA;EAEF;EADE;IACE,WAAA;EAGJ;;EACE;IACE,cAAA;IACA,YAAA;IACA,UAAA;EAEJ;EADI;IACE,WAAA;EAGN;;EACA;IACE,gBAAA;EAEF;;EACE;IACE,cAAA;EAEJ;EADI;IACE,WAAA;IACA,mBAAA;IACA,iBAAA;EAGN;;EACA;IACE,UAAA;EAEF;AACF\",\"sourcesContent\":[\"html,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: 'Avenir Roman';\\n  max-width: 100vw;\\n  overflow-x: hidden;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\\nh1{\\n  font-size: 36px;\\n  margin: 0;\\n}\\n\\nh3{\\n  font-size: 24px;\\n}\\n\\np{\\n  font-size: 18px;\\n  line-height: 1.4;\\n}\\n\\na {\\n  color: inherit;\\n  &:hover{\\n    color: #095463;\\n  }\\n}\\n\\nimg{\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n.container{\\n  max-width: 1200px;\\n  margin: auto;\\n  padding: 24px 0px;\\n}\\n\\n.page{\\n  margin-top: 100px;\\n}\\n\\n.home{\\n  .two-columns:nth-child(odd){\\n    background-color: #B8F2F7;\\n  }\\n  .container{\\n    padding: 90px 0;\\n  }\\n}\\n\\nheader{\\n  position: fixed;\\n  z-index: 999;\\n  top: 0;\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 8px 20px;\\n  align-items: center;\\n  background-color: #B8F2F7;\\n  nav{\\n    ul{\\n      justify-content: flex-end;\\n    }\\n  }\\n  .logo{\\n    img{\\n      width: 55px;\\n      height: auto;\\n    }\\n  }\\n}\\n\\nnav{\\n  ul{\\n    list-style: none;\\n    display: flex;\\n    li{\\n      margin: 0 20px;\\n      font-size: 20px;\\n      a{\\n        text-decoration: none;\\n      }\\n    }\\n  }\\n}\\n\\nfooter{\\n  background-color: #B8F2F7;\\n  padding: 14px;\\n  .columns{\\n    display: flex;\\n    .column{\\n      padding: 20px;\\n      width: 33%;\\n    }\\n  }\\n  nav{\\n    ul{\\n      justify-content: center;\\n    }\\n  }\\n}\\n\\n.hero{\\n  width: 100vw;\\n  height: 100vh;\\n  display: flex;\\n}\\n\\n.hero-img{\\n  width: 100vw;\\n  height: 100vh;\\n  opacity: 0.65;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: -1;\\n}\\n\\n.hero-txt{\\n  width: 950px;\\n  margin: auto auto;\\n  padding: 20px;\\n  border: 1px solid black;\\n  line-height: 1.5;\\n  text-align: center;\\n  opacity: 1;\\n}\\n\\n\\n.two-columns{\\n  .container{\\n    display: flex;\\n  }\\n  .column{\\n    width: 50%;\\n    ul{\\n      font-size: 24px;\\n    }\\n  }\\n}\\n\\n.text-block{\\n  max-width: 900px;\\n  margin: auto;\\n}\\n\\ntable{\\n  width: 100%;\\n  border-spacing: 0px;\\n  text-align: center;\\n  tr{\\n    td{\\n      &:nth-child(1){\\n        border-left: 1px solid black;\\n      }\\n      padding: 10px;\\n      border-bottom: 1px solid black;\\n      border-right: 1px solid black;\\n    }\\n    &:nth-child(1){\\n      background-color: #B8F2F7;\\n      td{\\n        padding: 10px;\\n        border-top: 1px solid black;\\n      }\\n    }\\n  }\\n}\\n\\n.mapouter{position:relative;text-align:right;height:100%;width:100%;}\\n.gmap_canvas {overflow:hidden;background:none!important;height:100%;width:100%;}\\n\\n.contact{\\n  padding: 48px 20px;\\n  text-align: center;\\n  .columns{\\n    margin-top: 48px;\\n    display: flex;\\n    .column{\\n      width: 50%;\\n      padding: 10px;\\n      text-align: left;\\n      form{\\n        width: 95%;\\n        display: block;\\n        margin: auto;\\n        label, input, textarea{\\n          width: 100%;\\n        }\\n        input{\\n          margin: 10px 0 20px 0;\\n          padding: 14px;\\n          &[type=submit]{\\n            background-color: #095463;\\n            color: #fff;\\n            font-size: 18px;\\n            border: none;\\n            cursor: pointer;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n@media screen and (max-width: 950px) {\\n  h1{\\n    font-size: 28px;\\n  }\\n  \\n  h3{\\n    font-size: 20px;\\n  }\\n  \\n  p{\\n    font-size: 16px;\\n    line-height: 1.4;\\n  }\\n  .page{\\n    margin-top: 80px;\\n    padding: 10px;\\n  }\\n  .hero-txt{\\n    width: 95%;\\n    margin: auto;\\n    h1{\\n      font-size: 22px;\\n    }\\n  }\\n  div.text-block{\\n    padding: 0 10px;\\n  }\\n  .home .container{\\n    padding: 45px 0px;\\n  }\\n  nav{\\n    width: 100%;\\n    ul{\\n      margin: 0;\\n      padding: 0;\\n      li{\\n        margin: 0 10px;\\n      }\\n    }\\n    a{\\n      font-size: 16px;\\n    }\\n  }\\n  header{\\n    display: flex;\\n    padding: 10px 10px;\\n    .logo{\\n      img{\\n        width: 50px;\\n      }\\n    }\\n  }\\n  .container{\\n    display: block;\\n    margin: auto;\\n    width: 100%;\\n    .column{\\n      width: 100%;\\n    }\\n  }  \\n  .two-columns{\\n    .container{\\n      display: block;\\n      margin: auto;\\n      width: 90%;\\n      .column{\\n        width: 100%;\\n      }\\n    }  \\n  }\\n  table{\\n    font-size: 0.9em;\\n  }\\n  .contact, footer{\\n    .columns{\\n      display: block;\\n      .column{\\n        width: 100%;\\n        margin-bottom: 14px;\\n        padding: 5px 10px;\\n      }\\n    }\\n  }\\n  .contact{\\n    padding: 0;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./styles/globals.scss\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return '@media '.concat(item[2], ' {').concat(content, '}');\n            }\n            return content;\n        }).join('');\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === 'string') {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    ''\n                ]\n            ];\n        }\n        var alreadyImportedModules = {\n        };\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = ''.concat(mediaQuery, ' and ').concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || '' // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === 'function') {\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return '/*# sourceURL='.concat(cssMapping.sourceRoot || '').concat(source, ' */');\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join('\\n');\n    }\n    return [\n        content\n    ].join('\\n');\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(base64);\n    return '/*# '.concat(data, ' */');\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaUJBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGNBQWM7QUFDckU7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcz9jYTRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi8gLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuICAgIHZhciBsaXN0ID0gW10gLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICAgIDtcbiAgICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcbiAgICAgICAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdAbWVkaWEgJy5jb25jYXQoaXRlbVsyXSwgJyB7JykuY29uY2F0KGNvbnRlbnQsICd9Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgICAgfSkuam9pbignJyk7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgICAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICAnJ1xuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChkZWR1cGUpIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspe1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gJycuY29uY2F0KG1lZGlhUXVlcnksICcgYW5kICcpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBsaXN0O1xufTtcbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgIDtcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgICAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24oc291cmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9Jy5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCAnICovJyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgY29udGVudFxuICAgICAgICBdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW1xuICAgICAgICAgICAgc291cmNlTWFwcGluZ1xuICAgICAgICBdKS5qb2luKCdcXG4nKTtcbiAgICB9XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY29udGVudFxuICAgIF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnLmNvbmNhdChiYXNlNjQpO1xuICAgIHJldHVybiAnLyojICcuY29uY2F0KGRhdGEsICcgKi8nKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/cGFnZT0lMkZfYXBwJmFic29sdXRlUGFnZVBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzYzZWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!\n");

/***/ }),

/***/ "./styles/globals.scss":
/*!*****************************!*\
  !*** ./styles/globals.scss ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!../node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./globals.scss */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./styles/globals.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                // These elements should always exist. If they do not,\n                // this code should fail.\n                var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                var parentNode = anchorElement.parentNode// Normally <head>\n                ;\n                // Each style tag should be placed right before our\n                // anchor. By inserting before and not after, we do not\n                // need to track the last inserted element.\n                parentNode.insertBefore(element, anchorElement);\n            };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!../node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./globals.scss */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./styles/globals.scss\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!../node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./globals.scss */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[10].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[10].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[10].use[4]!./styles/globals.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvZ2xvYmFscy5zY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsNjJCQUFtYjs7QUFFcmQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0sNjJCQUFtYjtBQUN6YjtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLDYyQkFBbWI7O0FBRTdjOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLnNjc3M/OTU2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbMTBdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbMTBdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Jlc29sdmUtdXJsLWxvYWRlci9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZlsxMF0udXNlWzNdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvc2Fzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzEwXS51c2VbNF0hLi9nbG9iYWxzLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09ICdkZWZhdWx0Jykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzEwXS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzEwXS51c2VbMl0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZXNvbHZlLXVybC1sb2FkZXIvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbMTBdLnVzZVszXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Nhc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZlsxMF0udXNlWzRdIS4vZ2xvYmFscy5zY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZlsxMF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZlsxMF0udXNlWzJdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzEwXS51c2VbM10hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9zYXNzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbMTBdLnVzZVs0XSEuL2dsb2JhbHMuc2Nzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles/globals.scss\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === 'undefined') {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTarget = function getTarget() {\n    const memo = {\n    };\n    return function memorize(target) {\n        if (typeof memo[target] === 'undefined') {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {\n    };\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + ' ' + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement('style');\n    const attributes = options.attributes || {\n    };\n    if (typeof attributes.nonce === 'undefined') {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === 'function') {\n        options.insert(style);\n    } else {\n        const target = getTarget(options.insert || 'head');\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join('\\n');\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? '' : obj.media ? '@media ' + obj.media + ' {' + obj.css + '}' : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute('media', media);\n    } else {\n        style.removeAttribute('media');\n    }\n    if (sourceMap && typeof btoa !== 'undefined') {\n        css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */';\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {\n    };\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== 'boolean') {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== '[object Array]') {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\n            const identifier = lastIdentifiers[i1];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzPzc1YjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2xpbmsnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-runtime.development.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-runtime.development.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.14.0\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = '';\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    }\n\n    stack += ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar currentlyValidatingElement = null;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  currentlyValidatingElement = element;\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (Array.isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (Array.isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === exports.Fragment) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-runtime.js":
/*!*******************************************!*\
  !*** ./node_modules/react/jsx-runtime.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLCtJQUFrRTtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MzRkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-runtime.js\n");

/***/ }),

/***/ "./node_modules/@prismicio/client/esm/@prismicio/client.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@prismicio/client/esm/@prismicio/client.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar Variation = /** @class */ (function () {\r\n    function Variation(data) {\r\n        this.data = {};\r\n        this.data = data;\r\n    }\r\n    Variation.prototype.id = function () {\r\n        return this.data.id;\r\n    };\r\n    Variation.prototype.ref = function () {\r\n        return this.data.ref;\r\n    };\r\n    Variation.prototype.label = function () {\r\n        return this.data.label;\r\n    };\r\n    return Variation;\r\n}());\r\nvar Experiment = /** @class */ (function () {\r\n    function Experiment(data) {\r\n        this.data = {};\r\n        this.data = data;\r\n        this.variations = (data.variations || []).map(function (v) {\r\n            return new Variation(v);\r\n        });\r\n    }\r\n    Experiment.prototype.id = function () {\r\n        return this.data.id;\r\n    };\r\n    Experiment.prototype.googleId = function () {\r\n        return this.data.googleId;\r\n    };\r\n    Experiment.prototype.name = function () {\r\n        return this.data.name;\r\n    };\r\n    return Experiment;\r\n}());\r\nvar Experiments = /** @class */ (function () {\r\n    function Experiments(data) {\r\n        if (data) {\r\n            this.drafts = (data.drafts || []).map(function (exp) {\r\n                return new Experiment(exp);\r\n            });\r\n            this.running = (data.running || []).map(function (exp) {\r\n                return new Experiment(exp);\r\n            });\r\n        }\r\n    }\r\n    Experiments.prototype.current = function () {\r\n        if (this.running.length > 0) {\r\n            return this.running[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Experiments.prototype.refFromCookie = function (cookie) {\r\n        if (!cookie || cookie.trim() === '')\r\n            return null;\r\n        var splitted = cookie.trim().split(' ');\r\n        if (splitted.length < 2)\r\n            return null;\r\n        var expId = splitted[0];\r\n        var varIndex = parseInt(splitted[1], 10);\r\n        var exp = this.running.filter(function (exp) {\r\n            return exp.googleId() === expId && exp.variations.length > varIndex;\r\n        })[0];\r\n        return exp ? exp.variations[varIndex].ref() : null;\r\n    };\r\n    return Experiments;\r\n}());\n\nvar LazySearchForm = /** @class */ (function () {\r\n    function LazySearchForm(id, api) {\r\n        this.id = id;\r\n        this.api = api;\r\n        this.fields = {};\r\n    }\r\n    LazySearchForm.prototype.set = function (key, value) {\r\n        this.fields[key] = value;\r\n        return this;\r\n    };\r\n    LazySearchForm.prototype.ref = function (ref) {\r\n        return this.set('ref', ref);\r\n    };\r\n    LazySearchForm.prototype.query = function (query) {\r\n        return this.set('q', query);\r\n    };\r\n    LazySearchForm.prototype.pageSize = function (size) {\r\n        return this.set('pageSize', size);\r\n    };\r\n    LazySearchForm.prototype.graphQuery = function (query) {\r\n        return this.set('graphQuery', query);\r\n    };\r\n    LazySearchForm.prototype.lang = function (langCode) {\r\n        return this.set('lang', langCode);\r\n    };\r\n    LazySearchForm.prototype.page = function (p) {\r\n        return this.set('page', p);\r\n    };\r\n    LazySearchForm.prototype.after = function (documentId) {\r\n        return this.set('after', documentId);\r\n    };\r\n    LazySearchForm.prototype.orderings = function (orderings) {\r\n        return this.set('orderings', orderings);\r\n    };\r\n    LazySearchForm.prototype.url = function () {\r\n        var _this = this;\r\n        return this.api.get().then(function (api) {\r\n            return LazySearchForm.toSearchForm(_this, api).url();\r\n        });\r\n    };\r\n    LazySearchForm.prototype.submit = function (cb) {\r\n        var _this = this;\r\n        return this.api.get().then(function (api) {\r\n            return LazySearchForm.toSearchForm(_this, api).submit(cb);\r\n        });\r\n    };\r\n    LazySearchForm.toSearchForm = function (lazyForm, api) {\r\n        var form = api.form(lazyForm.id);\r\n        if (form) {\r\n            return Object.keys(lazyForm.fields).reduce(function (form, fieldKey) {\r\n                var fieldValue = lazyForm.fields[fieldKey];\r\n                if (fieldKey === 'q') {\r\n                    return form.query(fieldValue);\r\n                }\r\n                else if (fieldKey === 'pageSize') {\r\n                    return form.pageSize(fieldValue);\r\n                }\r\n                else if (fieldKey === 'graphQuery') {\r\n                    return form.graphQuery(fieldValue);\r\n                }\r\n                else if (fieldKey === 'lang') {\r\n                    return form.lang(fieldValue);\r\n                }\r\n                else if (fieldKey === 'page') {\r\n                    return form.page(fieldValue);\r\n                }\r\n                else if (fieldKey === 'after') {\r\n                    return form.after(fieldValue);\r\n                }\r\n                else if (fieldKey === 'orderings') {\r\n                    return form.orderings(fieldValue);\r\n                }\r\n                else {\r\n                    return form.set(fieldKey, fieldValue);\r\n                }\r\n            }, form);\r\n        }\r\n        else {\r\n            throw new Error(\"Unable to access to form \" + lazyForm.id);\r\n        }\r\n    };\r\n    return LazySearchForm;\r\n}());\r\nvar SearchForm = /** @class */ (function () {\r\n    function SearchForm(form, httpClient) {\r\n        this.httpClient = httpClient;\r\n        this.form = form;\r\n        this.data = {};\r\n        for (var field in form.fields) {\r\n            if (form.fields[field]['default']) {\r\n                this.data[field] = [form.fields[field]['default']];\r\n            }\r\n        }\r\n    }\r\n    SearchForm.prototype.set = function (field, value) {\r\n        var fieldDesc = this.form.fields[field];\r\n        if (!fieldDesc)\r\n            throw new Error('Unknown field ' + field);\r\n        var checkedValue = value === '' || value === undefined ? null : value;\r\n        var values = this.data[field] || [];\r\n        if (fieldDesc.multiple) {\r\n            values = checkedValue ? values.concat([checkedValue]) : values;\r\n        }\r\n        else {\r\n            values = checkedValue ? [checkedValue] : values;\r\n        }\r\n        this.data[field] = values;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets a ref to query on for this SearchForm. This is a mandatory\r\n     * method to call before calling submit(), and api.form('everything').submit()\r\n     * will not work.\r\n     */\r\n    SearchForm.prototype.ref = function (ref) {\r\n        return this.set('ref', ref);\r\n    };\r\n    /**\r\n     * Sets a predicate-based query for this SearchForm. This is where you\r\n     * paste what you compose in your prismic.io API browser.\r\n     */\r\n    SearchForm.prototype.query = function (query) {\r\n        if (typeof query === 'string') {\r\n            return this.query([query]);\r\n        }\r\n        else if (Array.isArray(query)) {\r\n            return this.set('q', \"[\" + query.join('') + \"]\");\r\n        }\r\n        else {\r\n            throw new Error(\"Invalid query : \" + query);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a page size to query for this SearchForm. This is an optional method.\r\n     *\r\n     * @param {number} size - The page size\r\n     * @returns {SearchForm} - The SearchForm itself\r\n     */\r\n    SearchForm.prototype.pageSize = function (size) {\r\n        return this.set('pageSize', size);\r\n    };\r\n    /**\r\n     * Sets the graphquery to query for this SearchForm. This is an optional method.\r\n     */\r\n    SearchForm.prototype.graphQuery = function (query) {\r\n        return this.set('graphQuery', query);\r\n    };\r\n    /**\r\n     * Sets the language to query for this SearchForm. This is an optional method.\r\n     */\r\n    SearchForm.prototype.lang = function (langCode) {\r\n        return this.set('lang', langCode);\r\n    };\r\n    /**\r\n     * Sets the page number to query for this SearchForm. This is an optional method.\r\n     */\r\n    SearchForm.prototype.page = function (p) {\r\n        return this.set('page', p);\r\n    };\r\n    /**\r\n     * Remove all the documents except for those after the specified document in the list. This is an optional method.\r\n     */\r\n    SearchForm.prototype.after = function (documentId) {\r\n        return this.set('after', documentId);\r\n    };\r\n    /**\r\n     * Sets the orderings to query for this SearchForm. This is an optional method.\r\n     */\r\n    SearchForm.prototype.orderings = function (orderings) {\r\n        if (!orderings) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.set('orderings', \"[\" + orderings.join(',') + \"]\");\r\n        }\r\n    };\r\n    /**\r\n     * Build the URL to query\r\n     */\r\n    SearchForm.prototype.url = function () {\r\n        var url = this.form.action;\r\n        if (this.data) {\r\n            var sep = (url.indexOf('?') > -1 ? '&' : '?');\r\n            for (var key in this.data) {\r\n                if (Object.prototype.hasOwnProperty.call(this.data, key)) {\r\n                    var values = this.data[key];\r\n                    if (values) {\r\n                        for (var i = 0; i < values.length; i++) {\r\n                            url += sep + key + '=' + encodeURIComponent(values[i]);\r\n                            sep = '&';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Submits the query, and calls the callback function.\r\n     */\r\n    SearchForm.prototype.submit = function (cb) {\r\n        return this.httpClient.cachedRequest(this.url()).then(function (response) {\r\n            cb && cb(null, response);\r\n            return response;\r\n        }).catch(function (error) {\r\n            cb && cb(error);\r\n            throw error;\r\n        });\r\n    };\r\n    return SearchForm;\r\n}());\n\nvar OPERATOR = {\r\n    at: 'at',\r\n    not: 'not',\r\n    missing: 'missing',\r\n    has: 'has',\r\n    any: 'any',\r\n    in: 'in',\r\n    fulltext: 'fulltext',\r\n    similar: 'similar',\r\n    numberGt: 'number.gt',\r\n    numberLt: 'number.lt',\r\n    numberInRange: 'number.inRange',\r\n    dateBefore: 'date.before',\r\n    dateAfter: 'date.after',\r\n    dateBetween: 'date.between',\r\n    dateDayOfMonth: 'date.day-of-month',\r\n    dateDayOfMonthAfter: 'date.day-of-month-after',\r\n    dateDayOfMonthBefore: 'date.day-of-month-before',\r\n    dateDayOfWeek: 'date.day-of-week',\r\n    dateDayOfWeekAfter: 'date.day-of-week-after',\r\n    dateDayOfWeekBefore: 'date.day-of-week-before',\r\n    dateMonth: 'date.month',\r\n    dateMonthBefore: 'date.month-before',\r\n    dateMonthAfter: 'date.month-after',\r\n    dateYear: 'date.year',\r\n    dateHour: 'date.hour',\r\n    dateHourBefore: 'date.hour-before',\r\n    dateHourAfter: 'date.hour-after',\r\n    GeopointNear: 'geopoint.near',\r\n};\r\nfunction encode(value) {\r\n    if (typeof value === 'string') {\r\n        return \"\\\"\" + value + \"\\\"\";\r\n    }\r\n    else if (typeof value === 'number') {\r\n        return value.toString();\r\n    }\r\n    else if (value instanceof Date) {\r\n        return value.getTime().toString();\r\n    }\r\n    else if (Array.isArray(value)) {\r\n        return \"[\" + value.map(function (v) { return encode(v); }).join(',') + \"]\";\r\n    }\r\n    else if (typeof value === \"boolean\") {\r\n        return value.toString();\r\n    }\r\n    else {\r\n        throw new Error(\"Unable to encode \" + value + \" of type \" + typeof value);\r\n    }\r\n}\r\nvar geopoint = {\r\n    near: function (fragment, latitude, longitude, radius) {\r\n        return \"[\" + OPERATOR.GeopointNear + \"(\" + fragment + \", \" + latitude + \", \" + longitude + \", \" + radius + \")]\";\r\n    },\r\n};\r\nvar date = {\r\n    before: function (fragment, before) {\r\n        return \"[\" + OPERATOR.dateBefore + \"(\" + fragment + \", \" + encode(before) + \")]\";\r\n    },\r\n    after: function (fragment, after) {\r\n        return \"[\" + OPERATOR.dateAfter + \"(\" + fragment + \", \" + encode(after) + \")]\";\r\n    },\r\n    between: function (fragment, before, after) {\r\n        return \"[\" + OPERATOR.dateBetween + \"(\" + fragment + \", \" + encode(before) + \", \" + encode(after) + \")]\";\r\n    },\r\n    dayOfMonth: function (fragment, day) {\r\n        return \"[\" + OPERATOR.dateDayOfMonth + \"(\" + fragment + \", \" + day + \")]\";\r\n    },\r\n    dayOfMonthAfter: function (fragment, day) {\r\n        return \"[\" + OPERATOR.dateDayOfMonthAfter + \"(\" + fragment + \", \" + day + \")]\";\r\n    },\r\n    dayOfMonthBefore: function (fragment, day) {\r\n        return \"[\" + OPERATOR.dateDayOfMonthBefore + \"(\" + fragment + \", \" + day + \")]\";\r\n    },\r\n    dayOfWeek: function (fragment, day) {\r\n        return \"[\" + OPERATOR.dateDayOfWeek + \"(\" + fragment + \", \" + encode(day) + \")]\";\r\n    },\r\n    dayOfWeekAfter: function (fragment, day) {\r\n        return \"[\" + OPERATOR.dateDayOfWeekAfter + \"(\" + fragment + \", \" + encode(day) + \")]\";\r\n    },\r\n    dayOfWeekBefore: function (fragment, day) {\r\n        return \"[\" + OPERATOR.dateDayOfWeekBefore + \"(\" + fragment + \", \" + encode(day) + \")]\";\r\n    },\r\n    month: function (fragment, month) {\r\n        return \"[\" + OPERATOR.dateMonth + \"(\" + fragment + \", \" + encode(month) + \")]\";\r\n    },\r\n    monthBefore: function (fragment, month) {\r\n        return \"[\" + OPERATOR.dateMonthBefore + \"(\" + fragment + \", \" + encode(month) + \")]\";\r\n    },\r\n    monthAfter: function (fragment, month) {\r\n        return \"[\" + OPERATOR.dateMonthAfter + \"(\" + fragment + \", \" + encode(month) + \")]\";\r\n    },\r\n    year: function (fragment, year) {\r\n        return \"[\" + OPERATOR.dateYear + \"(\" + fragment + \", \" + year + \")]\";\r\n    },\r\n    hour: function (fragment, hour) {\r\n        return \"[\" + OPERATOR.dateHour + \"(\" + fragment + \", \" + hour + \")]\";\r\n    },\r\n    hourBefore: function (fragment, hour) {\r\n        return \"[\" + OPERATOR.dateHourBefore + \"(\" + fragment + \", \" + hour + \")]\";\r\n    },\r\n    hourAfter: function (fragment, hour) {\r\n        return \"[\" + OPERATOR.dateHourAfter + \"(\" + fragment + \", \" + hour + \")]\";\r\n    },\r\n};\r\nvar number = {\r\n    gt: function (fragment, value) {\r\n        return \"[\" + OPERATOR.numberGt + \"(\" + fragment + \", \" + value + \")]\";\r\n    },\r\n    lt: function (fragment, value) {\r\n        return \"[\" + OPERATOR.numberLt + \"(\" + fragment + \", \" + value + \")]\";\r\n    },\r\n    inRange: function (fragment, before, after) {\r\n        return \"[\" + OPERATOR.numberInRange + \"(\" + fragment + \", \" + before + \", \" + after + \")]\";\r\n    },\r\n};\r\nvar Predicates = {\r\n    at: function (fragment, value) {\r\n        return \"[\" + OPERATOR.at + \"(\" + fragment + \", \" + encode(value) + \")]\";\r\n    },\r\n    not: function (fragment, value) {\r\n        return \"[\" + OPERATOR.not + \"(\" + fragment + \", \" + encode(value) + \")]\";\r\n    },\r\n    missing: function (fragment) {\r\n        return \"[\" + OPERATOR.missing + \"(\" + fragment + \")]\";\r\n    },\r\n    has: function (fragment) {\r\n        return \"[\" + OPERATOR.has + \"(\" + fragment + \")]\";\r\n    },\r\n    any: function (fragment, values) {\r\n        return \"[\" + OPERATOR.any + \"(\" + fragment + \", \" + encode(values) + \")]\";\r\n    },\r\n    in: function (fragment, values) {\r\n        return \"[\" + OPERATOR.in + \"(\" + fragment + \", \" + encode(values) + \")]\";\r\n    },\r\n    fulltext: function (fragment, value) {\r\n        return \"[\" + OPERATOR.fulltext + \"(\" + fragment + \", \" + encode(value) + \")]\";\r\n    },\r\n    similar: function (documentId, maxResults) {\r\n        return \"[\" + OPERATOR.similar + \"(\\\"\" + documentId + \"\\\", \" + maxResults + \")]\";\r\n    },\r\n    date: date,\r\n    dateBefore: date.before,\r\n    dateAfter: date.after,\r\n    dateBetween: date.between,\r\n    dayOfMonth: date.dayOfMonth,\r\n    dayOfMonthAfter: date.dayOfMonthAfter,\r\n    dayOfMonthBefore: date.dayOfMonthBefore,\r\n    dayOfWeek: date.dayOfWeek,\r\n    dayOfWeekAfter: date.dayOfWeekAfter,\r\n    dayOfWeekBefore: date.dayOfWeekBefore,\r\n    month: date.month,\r\n    monthBefore: date.monthBefore,\r\n    monthAfter: date.monthAfter,\r\n    year: date.year,\r\n    hour: date.hour,\r\n    hourBefore: date.hourBefore,\r\n    hourAfter: date.hourAfter,\r\n    number: number,\r\n    gt: number.gt,\r\n    lt: number.lt,\r\n    inRange: number.inRange,\r\n    near: geopoint.near,\r\n    geopoint: geopoint,\r\n};\n\n/* eslint-disable */\r\n// Some portions of code from https://github.com/jshttp/cookie\r\nvar decode = decodeURIComponent;\r\nfunction tryDecode(str, decode) {\r\n    try {\r\n        return decode(str);\r\n    }\r\n    catch (e) {\r\n        return str;\r\n    }\r\n}\r\nfunction parse(str, options) {\r\n    if (typeof str !== 'string') {\r\n        throw new TypeError('argument str must be a string');\r\n    }\r\n    var obj = {};\r\n    var opt = options || {};\r\n    var pairs = str.split(/; */);\r\n    var dec = opt.decode || decode;\r\n    pairs.forEach(function (pair) {\r\n        var eq_idx = pair.indexOf('=');\r\n        // skip things that don't look like key=value\r\n        if (eq_idx < 0) {\r\n            return;\r\n        }\r\n        var key = pair.substr(0, eq_idx).trim();\r\n        var val = pair.substr(++eq_idx, pair.length).trim();\r\n        // quoted values\r\n        if ('\"' == val[0]) {\r\n            val = val.slice(1, -1);\r\n        }\r\n        // only assign once\r\n        if (undefined == obj[key]) {\r\n            obj[key] = tryDecode(val, dec);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\nvar Cookies = { parse: parse };\n\nfunction createPreviewResolver(token, documentId, getDocByID) {\r\n    var resolve = function (linkResolver, defaultUrl, cb) {\r\n        if (documentId && getDocByID) {\r\n            return getDocByID(documentId, { ref: token }).then(function (document) {\r\n                if (!document) {\r\n                    cb && cb(null, defaultUrl);\r\n                    return defaultUrl;\r\n                }\r\n                else {\r\n                    var url = (linkResolver && linkResolver(document)) || document.url || defaultUrl;\r\n                    cb && cb(null, url);\r\n                    return url;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            return Promise.resolve(defaultUrl);\r\n        }\r\n    };\r\n    return { token: token, documentId: documentId, resolve: resolve };\r\n}\n\nvar PREVIEW_COOKIE = 'io.prismic.preview';\r\nvar EXPERIMENT_COOKIE = 'io.prismic.experiment';\r\nvar ResolvedApi = /** @class */ (function () {\r\n    function ResolvedApi(data, httpClient, options) {\r\n        this.data = data;\r\n        this.masterRef = data.refs.filter(function (ref) { return ref.isMasterRef; })[0];\r\n        this.experiments = new Experiments(data.experiments);\r\n        this.bookmarks = data.bookmarks;\r\n        this.httpClient = httpClient;\r\n        this.options = options;\r\n        this.refs = data.refs;\r\n        this.tags = data.tags;\r\n        this.types = data.types;\r\n        this.languages = data.languages;\r\n    }\r\n    /**\r\n     * Returns a useable form from its id, as described in the RESTful description of the API.\r\n     * For instance: api.form(\"everything\") works on every repository (as \"everything\" exists by default)\r\n     * You can then chain the calls: api.form(\"everything\").query('[[:d = at(document.id, \"UkL0gMuvzYUANCpf\")]]').ref(ref).submit()\r\n     */\r\n    ResolvedApi.prototype.form = function (formId) {\r\n        var form = this.data.forms[formId];\r\n        if (form) {\r\n            return new SearchForm(form, this.httpClient);\r\n        }\r\n        return null;\r\n    };\r\n    ResolvedApi.prototype.everything = function () {\r\n        var f = this.form('everything');\r\n        if (!f)\r\n            throw new Error('Missing everything form');\r\n        return f;\r\n    };\r\n    /**\r\n     * The ID of the master ref on this prismic.io API.\r\n     * Do not use like this: searchForm.ref(api.master()).\r\n     * Instead, set your ref once in a variable, and call it when you need it; this will allow to change the ref you're viewing easily for your entire page.\r\n     */\r\n    ResolvedApi.prototype.master = function () {\r\n        return this.masterRef.ref;\r\n    };\r\n    /**\r\n     * Returns the ref ID for a given ref's label.\r\n     * Do not use like this: searchForm.ref(api.ref(\"Future release label\")).\r\n     * Instead, set your ref once in a variable, and call it when you need it; this will allow to change the ref you're viewing easily for your entire page.\r\n     */\r\n    ResolvedApi.prototype.ref = function (label) {\r\n        var ref = this.data.refs.filter(function (ref) { return ref.label === label; })[0];\r\n        return ref ? ref.ref : null;\r\n    };\r\n    ResolvedApi.prototype.currentExperiment = function () {\r\n        return this.experiments.current();\r\n    };\r\n    /**\r\n     * Query the repository\r\n     */\r\n    ResolvedApi.prototype.query = function (q, optionsOrCallback, cb) {\r\n        if (cb === void 0) { cb = function () { }; }\r\n        var _a = typeof optionsOrCallback === 'function'\r\n            ? { options: {}, callback: optionsOrCallback }\r\n            : { options: optionsOrCallback || {}, callback: cb }, options = _a.options, callback = _a.callback;\r\n        var form = this.everything();\r\n        for (var key in options) {\r\n            form = form.set(key, options[key]);\r\n        }\r\n        if (!options.ref) {\r\n            // Look in cookies if we have a ref (preview or experiment)\r\n            var cookieString = '';\r\n            if (this.options.req) { // NodeJS\r\n                cookieString = this.options.req.headers['cookie'] || '';\r\n            }\r\n            else if (typeof window !== 'undefined' && window.document) { // Browser\r\n                cookieString = window.document.cookie || '';\r\n            }\r\n            var cookies = Cookies.parse(cookieString);\r\n            var previewRef = cookies[PREVIEW_COOKIE];\r\n            var experimentRef = this.experiments.refFromCookie(cookies[EXPERIMENT_COOKIE]);\r\n            form = form.ref(previewRef || experimentRef || this.masterRef.ref);\r\n        }\r\n        if (q) {\r\n            form.query(q);\r\n        }\r\n        return form.submit(callback);\r\n    };\r\n    /**\r\n     * Retrieve the document returned by the given query\r\n     * @param {string|array|Predicate} the query\r\n     * @param {object} additional parameters. In NodeJS, pass the request as 'req'.\r\n     * @param {function} callback(err, doc)\r\n     */\r\n    ResolvedApi.prototype.queryFirst = function (q, optionsOrCallback, cb) {\r\n        var _a = typeof optionsOrCallback === 'function'\r\n            ? { options: {}, callback: optionsOrCallback }\r\n            : { options: optionsOrCallback || {}, callback: cb || (function () { }) }, options = _a.options, callback = _a.callback;\r\n        options.page = 1;\r\n        options.pageSize = 1;\r\n        return this.query(q, options).then(function (response) {\r\n            var document = response && response.results && response.results[0];\r\n            callback(null, document);\r\n            return document;\r\n        }).catch(function (error) {\r\n            callback(error);\r\n            throw error;\r\n        });\r\n    };\r\n    /**\r\n     * Retrieve the document with the given id\r\n     */\r\n    ResolvedApi.prototype.getByID = function (id, maybeOptions, cb) {\r\n        var options = maybeOptions ? __assign({}, maybeOptions) : {};\r\n        if (!options.lang)\r\n            options.lang = '*';\r\n        return this.queryFirst(Predicates.at('document.id', id), options, cb);\r\n    };\r\n    /**\r\n     * Retrieve multiple documents from an array of id\r\n     */\r\n    ResolvedApi.prototype.getByIDs = function (ids, maybeOptions, cb) {\r\n        var options = maybeOptions ? __assign({}, maybeOptions) : {};\r\n        if (!options.lang)\r\n            options.lang = '*';\r\n        return this.query(Predicates.in('document.id', ids), options, cb);\r\n    };\r\n    /**\r\n     * Retrieve the document with the given uid\r\n     */\r\n    ResolvedApi.prototype.getByUID = function (type, uid, maybeOptions, cb) {\r\n        var options = maybeOptions ? __assign({}, maybeOptions) : {};\r\n        if (options.lang === '*')\r\n            throw new Error(\"FORBIDDEN. You can't use getByUID with *, use the predicates instead.\");\r\n        if (!options.page)\r\n            options.page = 1;\r\n        return this.queryFirst(Predicates.at(\"my.\" + type + \".uid\", uid), options, cb);\r\n    };\r\n    /**\r\n     * Retrieve the singleton document with the given type\r\n     */\r\n    ResolvedApi.prototype.getSingle = function (type, maybeOptions, cb) {\r\n        var options = maybeOptions ? __assign({}, maybeOptions) : {};\r\n        return this.queryFirst(Predicates.at('document.type', type), options, cb);\r\n    };\r\n    /**\r\n     * Retrieve the document with the given bookmark\r\n     */\r\n    ResolvedApi.prototype.getBookmark = function (bookmark, maybeOptions, cb) {\r\n        var id = this.data.bookmarks[bookmark];\r\n        if (id) {\r\n            return this.getByID(id, maybeOptions, cb);\r\n        }\r\n        else {\r\n            return Promise.reject('Error retrieving bookmarked id');\r\n        }\r\n    };\r\n    ResolvedApi.prototype.getPreviewResolver = function (token, documentId) {\r\n        return createPreviewResolver(token, documentId, this.getByID.bind(this));\r\n    };\r\n    return ResolvedApi;\r\n}());\n\n/* eslint-disable */\r\n/**\r\n* A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\r\n* recently used items while discarding least recently used items when its limit\r\n* is reached.\r\n*\r\n* Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\r\n* Typescript-ified by Oleksandr Nikitin <https://tvori.info>\r\n*\r\n* Illustration of the design:\r\n*\r\n*       entry             entry             entry             entry\r\n*       ______            ______            ______            ______\r\n*      | head |.newer => |      |.newer => |      |.newer => | tail |\r\n*      |  A   |          |  B   |          |  C   |          |  D   |\r\n*      |______| <= older.|______| <= older.|______| <= older.|______|\r\n*\r\n*  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\r\n*/\r\nfunction MakeLRUCache(limit) {\r\n    return new LRUCache(limit);\r\n}\r\nfunction LRUCache(limit) {\r\n    // Current size of the cache. (Read-only).\r\n    this.size = 0;\r\n    // Maximum number of items this cache can hold.\r\n    this.limit = limit;\r\n    this._keymap = {};\r\n}\r\n/**\r\n * Put <value> into the cache associated with <key>. Returns the entry which was\r\n * removed to make room for the new entry. Otherwise undefined is returned\r\n * (i.e. if there was enough room already).\r\n */\r\nLRUCache.prototype.put = function (key, value) {\r\n    var entry = { key: key, value: value };\r\n    // Note: No protection agains replacing, and thus orphan entries. By design.\r\n    this._keymap[key] = entry;\r\n    if (this.tail) {\r\n        // link previous tail to the new tail (entry)\r\n        this.tail.newer = entry;\r\n        entry.older = this.tail;\r\n    }\r\n    else {\r\n        // we're first in -- yay\r\n        this.head = entry;\r\n    }\r\n    // add new entry to the end of the linked list -- it's now the freshest entry.\r\n    this.tail = entry;\r\n    if (this.size === this.limit) {\r\n        // we hit the limit -- remove the head\r\n        return this.shift();\r\n    }\r\n    else {\r\n        // increase the size counter\r\n        this.size++;\r\n    }\r\n};\r\n/**\r\n * Purge the least recently used (oldest) entry from the cache. Returns the\r\n * removed entry or undefined if the cache was empty.\r\n *\r\n * If you need to perform any form of finalization of purged items, this is a\r\n * good place to do it. Simply override/replace this function:\r\n *\r\n *   var c = new LRUCache(123);\r\n *   c.shift = function() {\r\n *     var entry = LRUCache.prototype.shift.call(this);\r\n *     doSomethingWith(entry);\r\n *     return entry;\r\n *   }\r\n */\r\nLRUCache.prototype.shift = function () {\r\n    // todo: handle special case when limit == 1\r\n    var entry = this.head;\r\n    if (entry) {\r\n        if (this.head.newer) {\r\n            this.head = this.head.newer;\r\n            this.head.older = undefined;\r\n        }\r\n        else {\r\n            this.head = undefined;\r\n        }\r\n        // Remove last strong reference to <entry> and remove links from the purged\r\n        // entry being returned:\r\n        entry.newer = entry.older = undefined;\r\n        // delete is slow, but we need to do this to avoid uncontrollable growth:\r\n        delete this._keymap[entry.key];\r\n    }\r\n    console.log('purging ', entry.key);\r\n    return entry;\r\n};\r\n/**\r\n * Get and register recent use of <key>. Returns the value associated with <key>\r\n * or undefined if not in cache.\r\n */\r\nLRUCache.prototype.get = function (key, returnEntry) {\r\n    // First, find our cache entry\r\n    var entry = this._keymap[key];\r\n    if (entry === undefined)\r\n        return; // Not cached. Sorry.\r\n    // As <key> was found in the cache, register it as being requested recently\r\n    if (entry === this.tail) {\r\n        // Already the most recently used entry, so no need to update the list\r\n        return returnEntry ? entry : entry.value;\r\n    }\r\n    // HEAD--------------TAIL\r\n    //   <.older   .newer>\r\n    //  <--- add direction --\r\n    //   A  B  C  <D>  E\r\n    if (entry.newer) {\r\n        if (entry === this.head)\r\n            this.head = entry.newer;\r\n        entry.newer.older = entry.older; // C <-- E.\r\n    }\r\n    if (entry.older)\r\n        entry.older.newer = entry.newer; // C. --> E\r\n    entry.newer = undefined; // D --x\r\n    entry.older = this.tail; // D. --> E\r\n    if (this.tail)\r\n        this.tail.newer = entry; // E. <-- D\r\n    this.tail = entry;\r\n    return returnEntry ? entry : entry.value;\r\n};\r\n// ----------------------------------------------------------------------------\r\n// Following code is optional and can be removed without breaking the core\r\n// functionality.\r\n/**\r\n * Check if <key> is in the cache without registering recent use. Feasible if\r\n * you do not want to chage the state of the cache, but only \"peek\" at it.\r\n * Returns the entry associated with <key> if found, or undefined if not found.\r\n */\r\nLRUCache.prototype.find = function (key) {\r\n    return this._keymap[key];\r\n};\r\n/**\r\n * Update the value of entry with <key>. Returns the old value, or undefined if\r\n * entry was not in the cache.\r\n */\r\nLRUCache.prototype.set = function (key, value) {\r\n    var oldvalue;\r\n    var entry = this.get(key, true);\r\n    if (entry) {\r\n        oldvalue = entry.value;\r\n        entry.value = value;\r\n    }\r\n    else {\r\n        oldvalue = this.put(key, value);\r\n        if (oldvalue)\r\n            oldvalue = oldvalue.value;\r\n    }\r\n    return oldvalue;\r\n};\r\n/**\r\n * Remove entry <key> from cache and return its value. Returns undefined if not\r\n * found.\r\n */\r\nLRUCache.prototype.remove = function (key) {\r\n    var entry = this._keymap[key];\r\n    if (!entry)\r\n        return;\r\n    delete this._keymap[entry.key]; // need to do delete unfortunately\r\n    if (entry.newer && entry.older) {\r\n        // relink the older entry with the newer entry\r\n        entry.older.newer = entry.newer;\r\n        entry.newer.older = entry.older;\r\n    }\r\n    else if (entry.newer) {\r\n        // remove the link to us\r\n        entry.newer.older = undefined;\r\n        // link the newer entry to head\r\n        this.head = entry.newer;\r\n    }\r\n    else if (entry.older) {\r\n        // remove the link to us\r\n        entry.older.newer = undefined;\r\n        // link the newer entry to head\r\n        this.tail = entry.older;\r\n    }\r\n    else { // if(entry.older === undefined && entry.newer === undefined) {\r\n        this.head = this.tail = undefined;\r\n    }\r\n    this.size--;\r\n    return entry.value;\r\n};\r\n/** Removes all entries */\r\nLRUCache.prototype.removeAll = function () {\r\n    // This should be safe, as we never expose strong refrences to the outside\r\n    this.head = this.tail = undefined;\r\n    this.size = 0;\r\n    this._keymap = {};\r\n};\r\n/**\r\n * Return an array containing all keys of entries stored in the cache object, in\r\n * arbitrary order.\r\n */\r\nif (typeof Object.keys === 'function') {\r\n    LRUCache.prototype.keys = function () { return Object.keys(this._keymap); };\r\n}\r\nelse {\r\n    LRUCache.prototype.keys = function () {\r\n        var keys = [];\r\n        for (var k in this._keymap)\r\n            keys.push(k);\r\n        return keys;\r\n    };\r\n}\r\n/**\r\n * Call `fun` for each entry. Starting with the newest entry if `desc` is a true\r\n * value, otherwise starts with the oldest (head) enrty and moves towards the\r\n * tail.\r\n *\r\n * `fun` is called with 3 arguments in the context `context`:\r\n *   `fun.call(context, Object key, Object value, LRUCache self)`\r\n */\r\nLRUCache.prototype.forEach = function (fun, context, desc) {\r\n    var entry;\r\n    if (context === true) {\r\n        desc = true;\r\n        context = undefined;\r\n    }\r\n    else if (typeof context !== 'object')\r\n        context = this;\r\n    if (desc) {\r\n        entry = this.tail;\r\n        while (entry) {\r\n            fun.call(context, entry.key, entry.value, this);\r\n            entry = entry.older;\r\n        }\r\n    }\r\n    else {\r\n        entry = this.head;\r\n        while (entry) {\r\n            fun.call(context, entry.key, entry.value, this);\r\n            entry = entry.newer;\r\n        }\r\n    }\r\n};\r\n/** Returns a JSON (array) representation */\r\n//LRUCache.prototype.toJSON = function () {\r\n//    var s: IEntry[] = [], entry = this.head;\r\n//    while (entry) {\r\n//        s.push({ key: entry.key.toJSON(), value: entry.value.toJSON() });\r\n//        entry = entry.newer;\r\n//    }\r\n//    return s;\r\n//};\r\n/** Returns a String representation */\r\nLRUCache.prototype.toString = function () {\r\n    var s = '', entry = this.head;\r\n    while (entry) {\r\n        s += String(entry.key) + ':' + entry.value;\r\n        entry = entry.newer;\r\n        if (entry)\r\n            s += ' < ';\r\n    }\r\n    return s;\r\n};\r\n// Export ourselves\r\n//if (typeof this === 'object') this.LRUCache = LRUCache;\n\nvar DefaultApiCache = /** @class */ (function () {\r\n    function DefaultApiCache(limit) {\r\n        if (limit === void 0) { limit = 1000; }\r\n        this.lru = MakeLRUCache(limit);\r\n    }\r\n    DefaultApiCache.prototype.isExpired = function (key) {\r\n        var value = this.lru.get(key, false);\r\n        if (value) {\r\n            return value.expiredIn !== 0 && value.expiredIn < Date.now();\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    DefaultApiCache.prototype.get = function (key, cb) {\r\n        var value = this.lru.get(key, false);\r\n        if (value && !this.isExpired(key)) {\r\n            cb(null, value.data);\r\n        }\r\n        else {\r\n            cb && cb(null);\r\n        }\r\n    };\r\n    DefaultApiCache.prototype.set = function (key, value, ttl, cb) {\r\n        this.lru.remove(key);\r\n        this.lru.put(key, {\r\n            data: value,\r\n            expiredIn: ttl ? (Date.now() + (ttl * 1000)) : 0,\r\n        });\r\n        cb && cb(null);\r\n    };\r\n    DefaultApiCache.prototype.remove = function (key, cb) {\r\n        this.lru.remove(key);\r\n        cb && cb(null);\r\n    };\r\n    DefaultApiCache.prototype.clear = function (cb) {\r\n        this.lru.removeAll();\r\n        cb && cb(null);\r\n    };\r\n    return DefaultApiCache;\r\n}());\n\nfunction fetchRequest(url, options, callback) {\r\n    var fetchOptions = {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    };\r\n    if (options && options.proxyAgent) {\r\n        fetchOptions.agent = options.proxyAgent;\r\n    }\r\n    // can't use number because of NodeJS globals included\r\n    var timeoutId;\r\n    var fetchPromise = cross_fetch__WEBPACK_IMPORTED_MODULE_0__(url, fetchOptions);\r\n    var promise = options.timeoutInMs ? Promise.race([\r\n        fetchPromise,\r\n        new Promise(function (_, reject) {\r\n            timeoutId = setTimeout(function () { return reject(new Error(url + \" response timeout\")); }, options.timeoutInMs);\r\n        })\r\n    ]) : fetchPromise;\r\n    promise.then(function (resp) {\r\n        clearTimeout(timeoutId);\r\n        if (~~(resp.status / 100 !== 2)) {\r\n            /**\r\n             * @description\r\n             * drain the resp before throwing an error to prevent memory leaks\r\n             * @link https://github.com/bitinn/node-fetch/issues/83\r\n             */\r\n            return resp.text().then(function () {\r\n                var e = new Error(\"Unexpected status code [\" + resp.status + \"] on URL \" + url);\r\n                e.status = resp.status;\r\n                throw e;\r\n            });\r\n        }\r\n        return resp.json().then(function (result) {\r\n            var cacheControl = resp.headers.get('cache-control');\r\n            var parsedCacheControl = cacheControl ? /max-age=(\\d+)/.exec(cacheControl) : null;\r\n            var ttl = parsedCacheControl ? parseInt(parsedCacheControl[1], 10) : undefined;\r\n            callback(null, result, resp, ttl);\r\n        });\r\n    }).catch(function (err) {\r\n        clearTimeout(timeoutId);\r\n        callback(err);\r\n    });\r\n}\r\nvar DefaultRequestHandler = /** @class */ (function () {\r\n    function DefaultRequestHandler(options) {\r\n        this.options = options || {};\r\n    }\r\n    DefaultRequestHandler.prototype.request = function (url, callback) {\r\n        fetchRequest(url, this.options, callback);\r\n    };\r\n    return DefaultRequestHandler;\r\n}());\n\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient(requestHandler, cache, proxyAgent, timeoutInMs) {\r\n        this.requestHandler = requestHandler || new DefaultRequestHandler({ proxyAgent: proxyAgent, timeoutInMs: timeoutInMs });\r\n        this.cache = cache || new DefaultApiCache();\r\n    }\r\n    HttpClient.prototype.request = function (url, callback) {\r\n        this.requestHandler.request(url, function (err, result, xhr, ttl) {\r\n            if (err) {\r\n                callback && callback(err, null, xhr, ttl);\r\n            }\r\n            else if (result) {\r\n                callback && callback(null, result, xhr, ttl);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Fetch a URL corresponding to a query, and parse the response as a Response object\r\n     */\r\n    HttpClient.prototype.cachedRequest = function (url, maybeOptions) {\r\n        var _this = this;\r\n        var options = maybeOptions || {};\r\n        var run = function (cb) {\r\n            var cacheKey = options.cacheKey || url;\r\n            _this.cache.get(cacheKey, function (cacheGetError, cacheGetValue) {\r\n                if (cacheGetError || cacheGetValue) {\r\n                    cb(cacheGetError, cacheGetValue);\r\n                }\r\n                else {\r\n                    _this.request(url, function (fetchError, fetchValue, _, ttlReq) {\r\n                        if (fetchError) {\r\n                            cb(fetchError, null);\r\n                        }\r\n                        else {\r\n                            var ttl = ttlReq || options.ttl;\r\n                            if (ttl) {\r\n                                _this.cache.set(cacheKey, fetchValue, ttl, cb);\r\n                            }\r\n                            cb(null, fetchValue);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            run(function (err, value) {\r\n                if (err)\r\n                    reject(err);\r\n                if (value)\r\n                    resolve(value);\r\n            });\r\n        });\r\n    };\r\n    return HttpClient;\r\n}());\n\nfunction separator(url) {\r\n    return url.indexOf('?') > -1 ? '&' : '?';\r\n}\r\nvar Api = /** @class */ (function () {\r\n    function Api(url, options) {\r\n        this.options = options || {};\r\n        this.url = url;\r\n        var queryStrings = [\r\n            this.options.accessToken && \"access_token=\" + this.options.accessToken,\r\n            this.options.routes && \"routes=\" + encodeURIComponent(JSON.stringify(this.options.routes))\r\n        ]\r\n            .filter(Boolean);\r\n        if (queryStrings.length > 0) {\r\n            this.url += separator(url) + queryStrings.join('&');\r\n        }\r\n        this.apiDataTTL = this.options.apiDataTTL || 5;\r\n        this.httpClient = new HttpClient(this.options.requestHandler, this.options.apiCache, this.options.proxyAgent, this.options.timeoutInMs);\r\n    }\r\n    /**\r\n     * Fetches data used to construct the api client, from cache if it's\r\n     * present, otherwise from calling the prismic api endpoint (which is\r\n     * then cached).\r\n     */\r\n    Api.prototype.get = function (cb) {\r\n        var _this = this;\r\n        return this.httpClient.cachedRequest(this.url, { ttl: this.apiDataTTL }).then(function (data) {\r\n            var resolvedApi = new ResolvedApi(data, _this.httpClient, _this.options);\r\n            cb && cb(null, resolvedApi);\r\n            return resolvedApi;\r\n        }).catch(function (error) {\r\n            cb && cb(error);\r\n            throw error;\r\n        });\r\n    };\r\n    return Api;\r\n}());\n\nvar DefaultClient = /** @class */ (function () {\r\n    function DefaultClient(url, options) {\r\n        this.api = new Api(url, options);\r\n    }\r\n    DefaultClient.prototype.getApi = function () {\r\n        return this.api.get();\r\n    };\r\n    DefaultClient.prototype.everything = function () {\r\n        return this.form('everything');\r\n    };\r\n    DefaultClient.prototype.form = function (formId) {\r\n        return new LazySearchForm(formId, this.api);\r\n    };\r\n    DefaultClient.prototype.query = function (q, optionsOrCallback, cb) {\r\n        return this.getApi().then(function (api) { return api.query(q, optionsOrCallback, cb); });\r\n    };\r\n    DefaultClient.prototype.queryFirst = function (q, optionsOrCallback, cb) {\r\n        return this.getApi().then(function (api) { return api.queryFirst(q, optionsOrCallback, cb); });\r\n    };\r\n    DefaultClient.prototype.getByID = function (id, options, cb) {\r\n        return this.getApi().then(function (api) { return api.getByID(id, options, cb); });\r\n    };\r\n    DefaultClient.prototype.getByIDs = function (ids, options, cb) {\r\n        return this.getApi().then(function (api) { return api.getByIDs(ids, options, cb); });\r\n    };\r\n    DefaultClient.prototype.getByUID = function (type, uid, options, cb) {\r\n        return this.getApi().then(function (api) { return api.getByUID(type, uid, options, cb); });\r\n    };\r\n    DefaultClient.prototype.getSingle = function (type, options, cb) {\r\n        return this.getApi().then(function (api) { return api.getSingle(type, options, cb); });\r\n    };\r\n    DefaultClient.prototype.getBookmark = function (bookmark, options, cb) {\r\n        return this.getApi().then(function (api) { return api.getBookmark(bookmark, options, cb); });\r\n    };\r\n    DefaultClient.prototype.getPreviewResolver = function (token, documentId) {\r\n        var _this = this;\r\n        var getDocById = function (documentId, maybeOptions) { return _this.getApi().then(function (api) {\r\n            return api.getByID(documentId, maybeOptions);\r\n        }); };\r\n        return createPreviewResolver(token, documentId, getDocById);\r\n    };\r\n    DefaultClient.getApi = function (url, options) {\r\n        var api = new Api(url, options);\r\n        return api.get();\r\n    };\r\n    return DefaultClient;\r\n}());\n\nvar index = {\r\n    experimentCookie: EXPERIMENT_COOKIE,\r\n    previewCookie: PREVIEW_COOKIE,\r\n    Predicates: Predicates,\r\n    predicates: Predicates,\r\n    Experiments: Experiments,\r\n    Api: Api,\r\n    client: client,\r\n    getApi: getApi,\r\n    api: api,\r\n};\r\nfunction client(url, options) {\r\n    return new DefaultClient(url, options);\r\n}\r\nfunction getApi(url, options) {\r\n    return DefaultClient.getApi(url, options);\r\n}\r\nfunction api(url, options) {\r\n    return getApi(url, options);\r\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n//# sourceMappingURL=client.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@prismicio/client/esm/@prismicio/client.mjs\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);